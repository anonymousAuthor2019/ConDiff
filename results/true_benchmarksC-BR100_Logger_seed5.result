Cannot instantiate java141.util.logging.Logger. Is there a public constructor or method to create it?
Cannot instantiate java141.util.logging.Logger. Is there a public constructor or method to create it?

==== Found a behavioral difference! ====
Sequential prefix:
final java141.util.logging.Logger var0 = java141.util.logging.Logger.getLogger((java.lang.String) "");
var0.info((java.lang.String) "");
final java.util.logging.Handler[] var1 = var0.getHandlers();
final java.util.logging.Level var2 = java.util.logging.Level.CONFIG;
var0.logrb((java.util.logging.Level) var2, (java.lang.String) "L", (java.lang.String) "", (java.lang.String) "", (java.lang.String) "a2");
final bug4779253.MyFilter var3 = new bug4779253.MyFilter();
var0.setFilter((java.util.logging.Filter) var3);
final java.util.logging.Level var4 = java.util.logging.Level.OFF;
var0.exiting((java.lang.String) "", (java.lang.String) "", (java.lang.Object) var4);

Concurrent suffixes:

var0.setFilter((java.util.logging.Filter) null);

vs.

var0.warning((java.lang.String) null);

stack traceSet(java.lang.RuntimeException: java.lang.NullPointerException: Calling 'isLoggable(Ljava/util/logging/LogRecord;)Z' on null object
	at Test5_1$2.run(Test5_1.java:58)
Caused by: java.lang.NullPointerException: Calling 'isLoggable(Ljava/util/logging/LogRecord;)Z' on null object
	at java141.util.logging.Logger.log(Logger.java:318)
	at java141.util.logging.LogManager$RootLogger.log(LogManager.java:820)
	at java141.util.logging.Logger.doLog(Logger.java:355)
	at java141.util.logging.Logger.log(Logger.java:378)
	at java141.util.logging.Logger.warning(Logger.java:899)
	at Test5_1$2.run(Test5_1.java:48)
)
HEADER,SR,DRT,CT,CTB,CTPRUNED,PREFIXPRUNED,SUFFIXPRUNED,CFP,TIME_SCHANGE,TIME_GEN,TIME_DIFFSEQ,TIME_DIFFCON,TIME_CIA
RESULTCSV,true,793753,838,8,830,0,0,990,1101,604950,32414,124273,31015
