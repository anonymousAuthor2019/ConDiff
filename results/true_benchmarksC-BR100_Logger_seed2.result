Cannot instantiate java141.util.logging.Logger. Is there a public constructor or method to create it?

==== Found a behavioral difference! ====
Sequential prefix:
final java141.util.logging.Logger var0 = java141.util.logging.Logger.getAnonymousLogger();
var0.entering((java.lang.String) "", (java.lang.String) "fT");
var0.finer((java.lang.String) "TYYH");
final java.util.logging.Level var1 = java.util.logging.Level.WARNING;
final java.util.logging.Level var2 = java.util.logging.Level.CONFIG;
var0.log((java.util.logging.Level) var1, (java.lang.String) "", (java.lang.Object) var2);
final boolean var3 = var0.getUseParentHandlers();
final java.util.logging.Handler[] var4 = var0.getHandlers();
final bug4779253.MyFilter var5 = new bug4779253.MyFilter();
var0.setFilter((java.util.logging.Filter) var5);
final java141.util.logging.Logger var6 = var0.getParent();
var0.fine((java.lang.String) "");

Concurrent suffixes:

var0.info((java.lang.String) null);

vs.

var0.setFilter((java.util.logging.Filter) null);

stack traceSet(java.lang.RuntimeException: java.lang.NullPointerException: Calling 'isLoggable(Ljava/util/logging/LogRecord;)Z' on null object
	at Test2_1$1.run(Test2_1.java:40)
Caused by: java.lang.NullPointerException: Calling 'isLoggable(Ljava/util/logging/LogRecord;)Z' on null object
	at java141.util.logging.Logger.log(Logger.java:318)
	at java141.util.logging.Logger.doLog(Logger.java:355)
	at java141.util.logging.Logger.log(Logger.java:378)
	at java141.util.logging.Logger.info(Logger.java:915)
	at Test2_1$1.run(Test2_1.java:31)
)
HEADER,SR,DRT,CT,CTB,CTPRUNED,PREFIXPRUNED,SUFFIXPRUNED,CFP,TIME_SCHANGE,TIME_GEN,TIME_DIFFSEQ,TIME_DIFFCON,TIME_CIA
RESULTCSV,true,971813,382,6,376,0,477,990,1070,843941,26707,91867,8228
